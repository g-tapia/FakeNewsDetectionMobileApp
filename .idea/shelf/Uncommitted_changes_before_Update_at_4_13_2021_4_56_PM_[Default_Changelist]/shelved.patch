Index: app/src/main/java/com/example/aifakenews/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.aifakenews;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Looper;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.NetworkResponse;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.RetryPolicy;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.VolleyLog;\r\nimport com.android.volley.toolbox.HttpHeaderParser;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.io.OutputStream;\r\nimport java.io.UnsupportedEncodingException;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\n\r\nimport me.angrybyte.goose.Article;\r\nimport me.angrybyte.goose.Configuration;\r\nimport me.angrybyte.goose.ContentExtractor;\r\n\r\npublic class HomeFragment extends Fragment implements View.OnClickListener{\r\n    private static final String TAG = \"HomeFragment\";\r\n    TextInputEditText editText;\r\n    TextInputLayout history1;\r\n    TextInputEditText history;\r\n    Button button;\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView (LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState){\r\n        setHasOptionsMenu(true);\r\n        View view = inflater.inflate(R.layout.fragment_home, container, false);\r\n\r\n        editText = view.findViewById(R.id.link);\r\n        history = view.findViewById(R.id.history);\r\n        history1 = view.findViewById(R.id.history1);\r\n        button = view.findViewById(R.id.button);\r\n        button.setOnClickListener(this);\r\n\r\n        history.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v){\r\n                InputMethodManager mgr = (InputMethodManager) getActivity().getSystemService(Context.INPUT_METHOD_SERVICE);\r\n                mgr.hideSoftInputFromWindow(history.getWindowToken(), 0);\r\n\r\n                if (history.getText().toString().equals(\"\")){\r\n                    Toast.makeText(getActivity(), \"History is empty\", Toast.LENGTH_SHORT).show();\r\n                }else{\r\n                    String historytext = history.getText().toString();\r\n                    final CharSequence[] hArray = historytext.split(\"\\\\r?\\\\n\");\r\n                    Log.d(TAG, \"onClick: the length of the list is: \" + hArray.length);\r\n                    AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n                    builder.setTitle(\"Make a selection:\");\r\n                    builder.setItems(hArray, new DialogInterface.OnClickListener() {\r\n                        public void onClick(DialogInterface dialog, int which) {\r\n                            editText.setText(hArray[which]);\r\n                        }\r\n                    });\r\n\r\n                    builder.setNegativeButton(\"Nevermind\", new DialogInterface.OnClickListener() {\r\n                        public void onClick(DialogInterface dialog, int id) {\r\n                            ;\r\n                        }\r\n                    });\r\n\r\n                    AlertDialog dialog = builder.create();\r\n\r\n                    dialog.show();\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        history1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v){\r\n                //Toast.makeText(getActivity(), \"LOL\", Toast.LENGTH_SHORT).show();\r\n                InputMethodManager mgr = (InputMethodManager) getActivity().getSystemService(Context.INPUT_METHOD_SERVICE);\r\n                mgr.hideSoftInputFromWindow(history1.getWindowToken(), 0);\r\n\r\n            }\r\n        });\r\n\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onPrepareOptionsMenu(Menu menu) {\r\n        MenuItem item=menu.findItem(R.id.drawer_menu);\r\n        if(item!=null)\r\n            item.setVisible(false);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        Log.d(TAG, \"onClick: The link is: \" + editText.getText().toString());\r\n        history.setText(editText.getText().toString() + \"\\n\" + history.getText().toString() + \"\\n\");\r\n\r\n        new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                Looper.prepare(); //////////////\r\n                Uri dataUri = Uri.parse(editText.getText().toString());\r\n                String urlToUse = dataUri.toString();\r\n\r\n                Configuration config = new Configuration(getActivity().getCacheDir().getAbsolutePath());\r\n                ContentExtractor extractor = new ContentExtractor(config);\r\n\r\n                Article article = null;\r\n                try {\r\n                    article = extractor.extractContent(urlToUse, true);\r\n                    Log.d(TAG, \"run: \" + article);\r\n                } catch (Exception e) {\r\n                    Toast.makeText(getActivity(), \"Invalid URL\", Toast.LENGTH_SHORT).show();\r\n                    Log.d(TAG, \"run: \" + article);\r\n                }\r\n\r\n                String details = \"\";\r\n                try {\r\n                    details = article.getCleanedArticleText();\r\n                    Log.d(TAG, \"run: DETAILS = \" + details);\r\n                } catch (Exception e) {\r\n                    Toast.makeText(getActivity(), \"Invalid URL\", Toast.LENGTH_SHORT).show();\r\n                    Log.d(TAG, \"run: \" + details);\r\n                }\r\n\r\n                if (!details.isEmpty()) {\r\n                    try {\r\n                        RequestQueue requestQueue = Volley.newRequestQueue(getActivity());\r\n                        String URL = \"http://192.168.56.1:5000/data\";\r\n                        JSONObject jsonBody = new JSONObject();\r\n                        jsonBody.put(\"news\", details);\r\n                        final String requestBody = jsonBody.toString();\r\n                        Log.d(TAG, \"run: json stuff done\");\r\n\r\n                        StringRequest stringRequest = new StringRequest(Request.Method.POST, URL, new Response.Listener<String>() {\r\n                            @Override\r\n                            public void onResponse(String response) {\r\n                                Log.i(\"VOLLEY\", response);\r\n                                Log.d(TAG, \"onResponse: \" + response);\r\n                                try {\r\n                                    String[] parsed = response.split(\"\\\\s+\");\r\n                                    if (parsed[0].equalsIgnoreCase(\"Real\")) {\r\n\r\n                                        // Simple dialog - no buttons.\r\n                                        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n\r\n                                        builder.setMessage(\"The news source you entered is REAL\");\r\n                                        builder.setTitle(\"Real News!\");\r\n\r\n                                        double probability = Double.parseDouble(parsed[2].substring(1, parsed[2].length() - 1));\r\n                                        if (probability < .5){\r\n                                            builder.setMessage(\"The news source you entered is FAKE\");\r\n                                            builder.setTitle(\"Fake News!\");\r\n                                        }\r\n\r\n\r\n                                        //AlertDialog dialog = builder.create();\r\n                                        builder.show();\r\n                                    } else if (parsed[0].equalsIgnoreCase(\"Fake\")) {\r\n                                        // Simple dialog - no buttons.\r\n                                        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n\r\n                                        builder.setMessage(\"The news source you entered is FAKE\");\r\n                                        builder.setTitle(\"Fake News!\");\r\n\r\n                                        double probability = Double.parseDouble(parsed[2].substring(1, parsed[2].length() - 1));\r\n                                        if (probability > .5){\r\n                                            builder.setMessage(\"The news source you entered is REAL\");\r\n                                            builder.setTitle(\"Real News!\");\r\n                                        }\r\n\r\n\r\n                                        //AlertDialog dialog = builder.create();\r\n                                        builder.show();\r\n                                    } else {\r\n                                        // Simple dialog - no buttons.\r\n                                        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n\r\n                                        builder.setMessage(\"There was an error parsing the server response.\");\r\n                                        builder.setTitle(\"Error!\");\r\n\r\n                                        //AlertDialog dialog = builder.create();\r\n                                        builder.show();\r\n                                    }\r\n                                } catch (Exception e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n\r\n                            }\r\n                        }, new Response.ErrorListener() {\r\n                            @Override\r\n                            public void onErrorResponse(VolleyError error) {\r\n                                Log.e(\"VOLLEY\", error.toString());\r\n                            }\r\n                        }) {\r\n                            @Override\r\n                            public String getBodyContentType() {\r\n                                Log.d(TAG, \"run: get body content type\");\r\n                                return \"application/json; charset=utf-8\";\r\n                            }\r\n\r\n                            @Override\r\n                            public byte[] getBody() throws AuthFailureError {\r\n                                Log.d(TAG, \"run: get body\");\r\n                                try {\r\n                                    return requestBody == null ? null : requestBody.getBytes(\"utf-8\");\r\n                                } catch (UnsupportedEncodingException uee) {\r\n                                    VolleyLog.wtf(\"Unsupported Encoding while trying to get the bytes of %s using %s\", requestBody, \"utf-8\");\r\n                                    return null;\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            protected Response<String> parseNetworkResponse(NetworkResponse response) {\r\n                                Log.d(TAG, \"run: parse start\");\r\n                                String responseString = \"\";\r\n                                if (response != null) {\r\n                                    responseString = String.valueOf(response);\r\n                                    // can get more details such as response.headers\r\n                                }\r\n                                Log.d(TAG, \"run:\" + responseString);\r\n                                //                            return Response.success(responseString, HttpHeaderParser.parseCacheHeaders(response));\r\n                                return super.parseNetworkResponse(response);\r\n                            }\r\n                        };\r\n                        int socketTimeout = 10000;//30 seconds - change to what you want\r\n                        RetryPolicy policy = new DefaultRetryPolicy(socketTimeout, DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT);\r\n                        stringRequest.setRetryPolicy(policy);\r\n                        Log.d(TAG, \"run: requestQueue adding\");\r\n                        requestQueue.add(stringRequest);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }).start();\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/aifakenews/HomeFragment.java	(revision ee1b7432e0c803599404a9dd10197fc44d1d31ca)
+++ app/src/main/java/com/example/aifakenews/HomeFragment.java	(date 1618350914296)
@@ -3,6 +3,7 @@
 import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
+import android.content.SharedPreferences;
 import android.net.Uri;
 import android.os.Bundle;
 import android.os.Looper;
@@ -56,19 +57,29 @@
     TextInputLayout history1;
     TextInputEditText history;
     Button button;
+    SharedPreferences sharedPref;
+    Button clearhistory;
+    Button selecthistory;
+
     @Nullable
     @Override
     public View onCreateView (LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState){
         setHasOptionsMenu(true);
         View view = inflater.inflate(R.layout.fragment_home, container, false);
 
+        sharedPref = getActivity().getSharedPreferences("pref", Context.MODE_PRIVATE);
+
         editText = view.findViewById(R.id.link);
         history = view.findViewById(R.id.history);
         history1 = view.findViewById(R.id.history1);
         button = view.findViewById(R.id.button);
         button.setOnClickListener(this);
+        clearhistory = view.findViewById(R.id.clearhistory);
+        clearhistory.setOnClickListener(this);
+        selecthistory = view.findViewById(R.id.selecthistory);
+        selecthistory.setOnClickListener(this);
 
-        history.setOnClickListener(new View.OnClickListener() {
+        selecthistory.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v){
                 InputMethodManager mgr = (InputMethodManager) getActivity().getSystemService(Context.INPUT_METHOD_SERVICE);
@@ -112,9 +123,35 @@
             }
         });
 
+        clearhistory.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v){
+                history.getText().clear();
+
+            }
+        });
+
         return view;
     }
 
+    @Override
+    public void onResume() {
+        String link = sharedPref.getString("LINK", "");
+        String historytext = sharedPref.getString("HISTORY", "");
+        editText.setText(link);
+        history.setText(historytext);
+        super.onResume();
+    }
+
+    @Override
+    public void onPause() {
+        SharedPreferences.Editor editor = sharedPref.edit();
+        editor.putString("LINK", editText.getText().toString());
+        editor.putString("HISTORY", history.getText().toString());
+        editor.apply();
+        super.onPause();
+    }
+
     @Override
     public void onPrepareOptionsMenu(Menu menu) {
         MenuItem item=menu.findItem(R.id.drawer_menu);
Index: app/src/main/res/layout/fragment_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <com.google.android.material.textfield.TextInputLayout\r\n        android:id=\"@+id/link1\"\r\n        style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n        android:layout_width=\"331dp\"\r\n        android:layout_height=\"54dp\"\r\n        android:autofillHints=\"\"\r\n        android:ems=\"10\"\r\n        android:fontFamily=\"@font/roboto_medium\"\r\n        android:hint=\"@string/enter_link_here\"\r\n        android:inputType=\"text\"\r\n        android:textColorHint=\"#6200EE\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.054\"\r\n        app:endIconMode=\"clear_text\">\r\n\r\n\r\n        <com.google.android.material.textfield.TextInputEditText\r\n            android:id=\"@+id/link\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:textSize=\"14sp\" />\r\n\r\n    </com.google.android.material.textfield.TextInputLayout>\r\n\r\n    <Button\r\n        android:id=\"@+id/button\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:fontFamily=\"@font/roboto_medium\"\r\n        android:text=\"Detect\"\r\n        android:textColor=\"#FFFFFF\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/link1\" />\r\n\r\n    <com.google.android.material.textfield.TextInputLayout\r\n        android:id=\"@+id/history1\"\r\n        android:layout_width=\"331dp\"\r\n        android:layout_height=\"247dp\"\r\n        android:clickable=\"true\"\r\n        android:fontFamily=\"@font/roboto_medium\"\r\n        android:hint=\"Search History\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/link1\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/link1\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/searchHistoryText\"\r\n        app:layout_constraintVertical_bias=\"0.0\">\r\n\r\n        <com.google.android.material.textfield.TextInputEditText\r\n            android:id=\"@+id/history\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:editable=\"false\"\r\n            android:inputType=\"none\" />\r\n\r\n    </com.google.android.material.textfield.TextInputLayout>\r\n\r\n    <TextView\r\n        android:id=\"@+id/searchHistoryText\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:fontFamily=\"@font/roboto_medium\"\r\n        android:text=\"@string/search_history\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/link1\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/button\" />\r\n\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_home.xml	(revision ee1b7432e0c803599404a9dd10197fc44d1d31ca)
+++ app/src/main/res/layout/fragment_home.xml	(date 1618350914301)
@@ -44,6 +44,34 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toBottomOf="@+id/link1" />
 
+    <Button
+        android:id="@+id/clearhistory"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:fontFamily="@font/roboto_medium"
+        android:text="CLEAR HISTORY"
+        android:textColor="#FFFFFF"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="@+id/history1"
+        app:layout_constraintHorizontal_bias="0.501"
+        app:layout_constraintStart_toStartOf="@+id/history1"
+        app:layout_constraintTop_toBottomOf="@+id/history1"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <Button
+        android:id="@+id/selecthistory"
+        android:layout_width="0dp"
+        android:layout_height="37dp"
+        android:fontFamily="@font/roboto_medium"
+        android:text="SELECT FROM HISTORY"
+        android:textColor="#FFFFFF"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="@+id/link1"
+        app:layout_constraintHorizontal_bias="0.506"
+        app:layout_constraintStart_toStartOf="@+id/link1"
+        app:layout_constraintTop_toBottomOf="@+id/button"
+        app:layout_constraintVertical_bias="0.0" />
+
     <com.google.android.material.textfield.TextInputLayout
         android:id="@+id/history1"
         android:layout_width="331dp"
@@ -55,7 +83,7 @@
         app:layout_constraintEnd_toEndOf="@+id/link1"
         app:layout_constraintHorizontal_bias="0.0"
         app:layout_constraintStart_toStartOf="@+id/link1"
-        app:layout_constraintTop_toBottomOf="@+id/searchHistoryText"
+        app:layout_constraintTop_toBottomOf="@+id/selecthistory"
         app:layout_constraintVertical_bias="0.0">
 
         <com.google.android.material.textfield.TextInputEditText
@@ -67,17 +95,5 @@
 
     </com.google.android.material.textfield.TextInputLayout>
 
-    <TextView
-        android:id="@+id/searchHistoryText"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="20dp"
-        android:fontFamily="@font/roboto_medium"
-        android:text="@string/search_history"
-        android:textStyle="bold"
-        app:layout_constraintStart_toStartOf="@+id/link1"
-        app:layout_constraintTop_toBottomOf="@+id/button" />
-
-
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_1_2021_9_10_AM_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_4_1_2021_9_10_AM_[Default_Changelist]/shelved.patch	(revision ee1b7432e0c803599404a9dd10197fc44d1d31ca)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_4_1_2021_9_10_AM_[Default_Changelist]/shelved.patch	(revision ee1b7432e0c803599404a9dd10197fc44d1d31ca)
@@ -1,2 +0,0 @@
-diff --git .idea/shelf/Uncommitted_changes_before_Update_at_3_23_2021_5_12_PM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_3_23_2021_5_12_PM__Default_Changelist_.xml
-diff --git .idea/shelf/Uncommitted_changes_before_Update_at_3_23_2021_6_51_PM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_3_23_2021_6_51_PM__Default_Changelist_.xml
Index: .idea/shelf/Uncommitted_changes_before_Update_at_4_1_2021_9_10_AM__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_4_1_2021_9_10_AM__Default_Changelist_.xml	(revision ee1b7432e0c803599404a9dd10197fc44d1d31ca)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_4_1_2021_9_10_AM__Default_Changelist_.xml	(revision ee1b7432e0c803599404a9dd10197fc44d1d31ca)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_4_1_2021_9_10_AM_[Default_Changelist]" date="1617286244581" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_1_2021_9_10_AM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 4/1/2021 9:10 AM [Default Changelist]" />
-</changelist>
\ No newline at end of file
diff --git .idea/shelf/Making_better_UI.xml .idea/shelf/Making_better_UI.xml
diff --git .idea/shelf/Making_better_UI1.xml .idea/shelf/Making_better_UI1.xml
